{"chunk":0,"numChunks":1,"fileHash":"wNEFoWbIQiTvnBaNd6+a1LohfmbmI9pkrNPRY5LYrLE=","filePath":"internal/handler/login_handler.go","content":"package handler\n\nimport (\n\t\"forum/internal/session\"\n\t\"forum/internal/user\"\n\t\"forum/internal/util\"\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc LoginHandler(w http.ResponseWriter, r *http.Request) {\n\tif r.Method == \"POST\" {\n\t\temail := r.FormValue(\"email\")\n\t\tpassword := r.FormValue(\"password\")\n\n\t\tif !util.IsValidEmail(email) {\n\t\t\tutil.JSONResponse(w, http.StatusBadRequest, map[string]string{\"error\": \"Invalid email format\"})\n\t\t\treturn\n\t\t}\n\n\t\tuserID, err := user.AuthenticateUser(email, password)\n\t\tif err != nil {\n\t\t\tlog.Println(\"Invalid credentials:\", err)\n\t\t\tutil.JSONResponse(w, http.StatusUnauthorized, map[string]string{\"error\": \"Invalid credentials\"})\n\t\t\treturn\n\t\t}\n\n\t\tif err := session.CreateSession(w, userID); err != nil {\n\t\t\tlog.Println(\"Session creation failed:\", err)\n\t\t\tutil.JSONResponse(w, http.StatusInternalServerError, map[string]string{\"error\": \"Session creation failed\"})\n\t\t\treturn\n\t\t}\n\n\t\tutil.JSONResponse(w, http.StatusOK, map[string]string{\"redirect\": \"/\"})\n\t\treturn\n\t}\n\n\thttp.ServeFile(w, r, \"./web/templates/index.html\")\n}"}