{"chunk":0,"numChunks":2,"fileHash":"ee9O0A5CvYksosdLswBOji6qILxeFJ5C+yijh27dmpE=","filePath":"internal/session/session.go","content":"package session\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t\"forum/internal/database\"\n\t\"log\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/gofrs/uuid\"\n)\nfunc CreateSession(w http.ResponseWriter, userID int) error {\n\t_, err := database.Db.Exec(\"DELETE FROM sessions WHERE id = ?\", userID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tsessionID, err := uuid.NewV4()\n\tif err != nil {\n\t\treturn err\n\t}\n\n\texpires := time.Now().Add(2 * time.Hour)\n\t_, err = database.Db.Exec(\n\t\t\"INSERT INTO sessions (session_id, id, expires_at) VALUES (?, ?, ?)\",\n\t\tsessionID.String(), userID, expires,\n\t)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\thttp.SetCookie(w, &http.Cookie{\n\t\tName:     \"session_id\",\n\t\tValue:    sessionID.String(),\n\t\tExpires:  expires,\n\t\tHttpOnly: true,\n\t})\n\treturn nil\n}\nfunc DeleteSession(sessionID string) error {\n\t_, err := database.Db.Exec(\"DELETE FROM sessions WHERE session_id = ?\", sessionID)\n\treturn err\n}\nfunc GetUserIDFromSession(r *http.Request) (int, error) {\n\tcookie, err := r.Cookie(\"session_id\")\n\tif err != nil {\n\t\treturn 0, fmt.Errorf(\"no session found\")\n\t}\n\n\tvar userID int\n\tvar expiresAt time.Time\n\terr = database.Db.QueryRow(\n\t\t\"SELECT id, expires_at FROM sessions WHERE session_id = ?\", cookie.Value,\n\t).Scan(&userID, &expiresAt)\n\n\tif err == sql.ErrNoRows {\n\t\treturn 0, fmt.Errorf(\"session not found\")\n\t} else if err != nil {\n\t\treturn 0, err\n\t}\n\n\tif time.Now().After(expiresAt) {\n\t\tDeleteSession(cookie.Value)\n\t\treturn 0, fmt.Errorf(\"session expired\")\n\t}\n\n\treturn userID, nil"}