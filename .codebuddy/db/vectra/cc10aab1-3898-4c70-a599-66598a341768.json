{"chunk":3,"numChunks":4,"fileHash":"qy21x11i4aF/md6OY3+v2DF8XKAPDwT+7tyxBtV2C/Q=","filePath":"internal/handler/filter_handler.go","content":"package handler\nfunc FilterHandler(w http.ResponseWriter, r *http.Request) {\n\tif userCreated && userID > 0 {\n\t\t// Fetch posts created by the logged-in user\n\t\trows, err = database.Db.Query(\"SELECT id, title, category FROM posts WHERE user_id = ?\", userID)\n\t} else if liked && userID > 0 {\n\t\t// Fetch posts liked by the logged-in user\n\t\trows, err = database.Db.Query(`\n            SELECT p.id, p.title, p.category \n            FROM posts p\n            JOIN reactions r ON p.id = r.post_id \n            WHERE r.user_id = ? AND r.type = 'like'\n        `, userID)\n\t} else if category != \"\" {\n\t\t// Fetch posts by category\n\t\trows, err = database.Db.Query(\"SELECT id, title, category FROM posts WHERE category LIKE ?\", \"%\"+category+\"%\")\n\t} else {\n\t\t// Invalid filter request\n\t\thttp.Error(w, \"Invalid filter request\", http.StatusBadRequest)\n\t\treturn\n\t}\n\tif util.ErrorCheckHandlers(w, r, \"Failed to fetch posts\", err, http.StatusInternalServerError) {\n\t\treturn\n\t}\n\tdefer rows.Close()\n\n\t// Collect filtered posts\n\tvar posts []struct {\n\t\tID       int\n\t\tTitle    string\n\t\tCategory string\n\t}\n\n\tfor rows.Next() {\n\t\tvar post struct {\n\t\t\tID       int\n\t\t\tTitle    string\n\t\t\tCategory string\n\t\t}\n\t\terr = rows.Scan(&post.ID, &post.Title, &post.Category)\n\t\tif util.ErrorCheckHandlers(w, r, \"Failed to scan post\", err, http.StatusInternalServerError) {\n\t\t\treturn\n\t\t}\n\t\tposts = append(posts, post)\n\t}\n\n\t// Prepare data for the template"}